# The zabbix-api for automatically creating and or updating hosts
---
- name: Load platform-specific variables
  include_vars:
    dir: vars
  no_log: True

- name: "API | Installing the Zabbix-api package on localhost"
  pip:
    name: zabbix-api
    state: present
    extra_args: --user
  register: zabbix_api_package_installed
  until: zabbix_api_package_installed is succeeded
  delegate_to: localhost
  run_once: true
  become: true
  when:
    - zabbix_install_pip_packages | bool
    - (zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)

- name: "API | Create hostgroups"
  zabbix_group:
    server_url: "{{ zabbix_url }}"
    http_login_user: "{{ zabbix_api_http_user | default(omit) }}"
    http_login_password: "{{ zabbix_api_http_password | default(omit) }}"
    login_user: "{{ zabbix_api_user }}"
    login_password: "{{ zabbix_api_pass }}"
    host_group: "{{ zabbix_host_groups }}"
    state: "{{ zabbix_create_hostgroup }}"
  when:
    - zabbix_api_create_hostgroup | bool
  register: zabbix_api_hostgroup_created
  until: zabbix_api_hostgroup_created is succeeded
  delegate_to: localhost
  become: false
  tags:
    - api

- name: "API | Create a new host or update an existing host's info"
  zabbix_host:
    server_url: "{{ zabbix_url }}"
    http_login_user: "{{ zabbix_api_http_user | default(omit) }}"
    http_login_password: "{{ zabbix_api_http_password | default(omit) }}"
    login_user: "{{ zabbix_api_user }}"
    login_password: "{{ zabbix_api_pass }}"
    host_name: "{{ zabbix_agent_hostname }}"
    host_groups: "{{ zabbix_host_groups }}"
    link_templates: "{{ zabbix_link_templates }}"
    status: "{{ zabbix_host_status }}"
    state: "{{ zabbix_create_host }}"
    force: "{{ zabbix_update_host }}"
    proxy: "{{ zabbix_proxy }}"
    interfaces: "{{ zabbix_agent_interfaces }}"
    visible_name: "{{ zabbix_visible_hostname | default(zabbix_agent_hostname) }}"
    tls_psk: "{{ zabbix_agent_tlspsk_secret | default(omit) }}"
    tls_psk_identity: "{{ zabbix_agent_tlspskidentity | default(omit) }}"
    tls_issuer: "{{ zabbix_agent_tlsservercertissuer | default(omit) }}"
    tls_subject: "{{ zabbix_agent_tlsservercertsubject | default(omit) }}"
    tls_accept: "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}"
    tls_connect: "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}"
    validate_certs: "{{ zabbix_validate_certs | default(omit) }}"
    description: "{{ zabbix_agent_description | default(omit) }}"
    inventory_zabbix: "{{ zabbix_agent_inventory_zabbix | default({}) }}"
  notify: restart docker zabbix agent
  when:
    - zabbix_api_create_hosts | bool
  register: zabbix_api_host_created
  until: zabbix_api_host_created is succeeded
  delegate_to: localhost
  become: false
  changed_when: false
  tags:
    - api

# Update an existing host's TLS settings
- name: Update an existing host's TLS settings
  zabbix_host:
    server_url: "{{ zabbix_url }}"
    login_user: "{{ zabbix_api_user }}"
    login_password: "{{ zabbix_api_pass }}"
    host_name: "{{ zabbix_agent_hostname }}"
    visible_name: "{{ zabbix_visible_hostname | default(zabbix_agent_hostname) }}"
    host_groups: "{{ zabbix_host_groups }}"
    tls_psk: "{{ zabbix_agent_tlspsk_secret | default(omit) }}"
    tls_psk_identity: "{{ zabbix_agent_tlspskidentity | default(omit) }}"
    tls_accept: "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}"
    tls_connect: "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}"
  notify: restart docker zabbix agent
  register: zabbix_api_host_update
  until: zabbix_api_host_update is succeeded
  delegate_to: localhost
  become: false
  when:
    - zabbix_api_update_psk | bool
  tags:
    - api

- name: "Debug"
  debug:
    var: zabbix_api_host_update
    verbosity: 2
